image: jangorecki/r-base-dev
services:
- postgres

variables:
  POSTGRES_HOST: postgres
  POSTGRES_PORT: "5432"
  POSTGRES_DB: r_db
  POSTGRES_USER: r_user
  POSTGRES_PASSWORD: r_password

before_script:
  - R CMD build . --no-build-vignettes --no-manual # to be removed after gitlab-ci-multi-runner#157

stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
    - R CMD build . --no-build-vignettes --no-manual

test:
  stage: test
  script:
    # dependencies
    - apt-get update -qy
    - apt-get install -y libpq-dev
    - Rscript -e 'install.packages(c("RPostgreSQL","data.table","logR"), repos=c("https://cran.rstudio.com","http://jangorecki.gitlab.io/logR"))'
    # run check
    - R CMD check $(ls -1t *.tar.gz | head -n 1) --no-vignettes --no-build-vignettes --no-manual --as-cran
    # export Rcheck results
    - mkdir rcheck
    - mv $(find . -maxdepth 1 -name "*.Rcheck" -type d) rcheck
  artifacts:
    paths:
      - rcheck

pages:
  stage: deploy
  script:
    # dependencies
    - apt-get update -qy
    - apt-get install -y libpq-dev
    - Rscript -e 'install.packages(c("RPostgreSQL","data.table","logR"), repos=c("https://cran.rstudio.com","http://jangorecki.gitlab.io/logR"))'
    # install pkg to render html manual
    - R CMD INSTALL --html $(ls -1t *.tar.gz | head -n 1)
    - mkdir public public/html
    # copy html manual, description file
    - Rscript -e 'file.copy(system.file("DESCRIPTION", package="pg"), to="public")'
    - Rscript -e 'setwd("public"); invisible(sapply(list.files(system.file("html", package="pg"), full.names = TRUE), file.copy, to = "html", recursive = TRUE))'
    # produce index.html
    - echo '<html><body><h3>pg</h3><h4>Postgres database tools for R</h4><a href="https://gitlab.com/jangorecki/pg">upstream repo</a><br/><a href="pg/html/00Index.html">manual</a><br/><br/>Install from R:<br/><pre><code>install.packages("pg", repos = c("https://cran.rstudio.com","http://jangorecki.gitlab.io/logR","http://jangorecki.gitlab.io/pg"))</code></pre></body></html>' > public/index.html
    # produce drat repo
    - Rscript -e 'install.packages("drat", repos = "https://eddelbuettel.github.io/drat")'
    - Rscript -e 'drat::insertPackage(list.files(pattern = "*\\.tar\\.gz$"), "public")'
  only:
    - master
  artifacts:
    paths:
      - public
